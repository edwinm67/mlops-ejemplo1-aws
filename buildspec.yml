version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "ml-model-lambda"
    IMAGE_TAG: "latest"
    LAMBDA_FUNCTION_NAME: "MLModelLambda"
    API_NAME: "MLModelAPI"
    STAGE_NAME: "prod"
    AWS_DEFAULT_REGION: "us-east-1"

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - pip install -r requirements.txt

  pre_build:
    commands:
      - echo Configurando entorno AWS...
      - export ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - export REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo Verificando existencia del repositorio ECR...
      - |
        if aws ecr describe-repositories --repository-names $IMAGE_REPO_NAME --region $AWS_DEFAULT_REGION; then
          echo "Repositorio ECR ya existe."
        else
          echo "Repositorio no existe. Creándolo..."
          aws ecr create-repository --repository-name $IMAGE_REPO_NAME --region $AWS_DEFAULT_REGION
        fi
      - echo Autenticándose en Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI

  build:
    commands:
      - echo Entrenando modelo...
      - python src/train.py
      - echo Construyendo imagen Docker...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - echo Etiquetando imagen para ECR...
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker images
      - echo Verificando etiqueta ECR...
      - docker images | grep $REPOSITORY_URI || echo "Etiqueta no encontrada. ERROR en tag."

  post_build:
    commands:
      - echo Subiendo imagen a ECR...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Desplegando función Lambda...
      - |
        if aws lambda get-function --function-name $LAMBDA_FUNCTION_NAME --region $AWS_DEFAULT_REGION; then
          echo "Actualizando función Lambda existente..."
          aws lambda update-function-code             --function-name $LAMBDA_FUNCTION_NAME             --image-uri $REPOSITORY_URI:$IMAGE_TAG             --region $AWS_DEFAULT_REGION
        else
          echo "Creando nueva función Lambda..."
          aws lambda create-function             --function-name $LAMBDA_FUNCTION_NAME             --package-type Image             --code ImageUri=$REPOSITORY_URI:$IMAGE_TAG             --role arn:aws:iam::$ACCOUNT_ID:role/MyLambdaExecutionRole             --timeout 30             --memory-size 512             --region $AWS_DEFAULT_REGION
        fi
      - echo Despliegue finalizado correctamente.

artifacts:
  files:
    - '**/*'
