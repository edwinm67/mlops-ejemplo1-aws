version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "ml-model-lambda"
    IMAGE_TAG: "latest"
    AWS_DEFAULT_REGION: "us-east-1"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - export ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - export REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - echo Repository URI:$REPOSITORY_URI
  install:
    runtime-versions:
      python: 3.8
    commands:
      - pip install -r requirements.txt
  build:
    commands:
      - echo "Entrenando modelo..."
      - python src/train.py
      - echo Building the Docker image...
      - ls -lh ./outputs
      - docker build -t $IMAGE_REPO_NAME .
      - echo Tagging the image...
      - export IMAGE_FULL_NAME=$REPOSITORY_URI:$IMAGE_TAG
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Build completed on `date`

artifacts:
  files:
    - '**/*'
